unpack.ffdf(paste0(genObjPath, "Int_Formula"), tempPath)
# Advanced model(s)
unpack.ffdf(paste0(genObjPath, "Adv_Formula"), tempPath)
# ------ 2. Model comparison
# --- Fitting the models
# - Basic modle(s)
logitMod_Basic <- glm(inputs_fin_bas, data=datCredit_train, family="binomial")
# - Basic modle(s)
logitMod_Int <- glm(inputs_int, data=datCredit_train, family="binomial")
# - Advanced modle(s)
logitMod_Adv <- glm(inputs_adv, data=datCredit_train, family="binomial")
# --- Performing ROC analysis on the models
# - Basic model(s)
datCredit_valid[, prob_basic := predict(logitMod_Basic, newdata = datCredit_valid, type="response")]
roc_obj_basic <- roc(datCredit_valid$DefaultStatus1_lead_12_max, datCredit_valid$prob_basic)
roc_obj_basic$auc
### RESULTS: 63.22%
# - Intermediate model(s)
datCredit_valid[, prob_int := predict(logitMod_Int, newdata = datCredit_valid, type="response")]
roc_obj_int <- roc(datCredit_valid$DefaultStatus1_lead_12_max, datCredit_valid$prob_int)
roc_obj_int$auc
### RESULTS: 77.57%
# - Advanced model(s)
datCredit_valid[, prob_adv := predict(logitMod_Adv, newdata = datCredit_valid, type="response")]
roc_obj_adv <- roc(datCredit_valid$DefaultStatus1_lead_12_max, datCredit_valid$prob_adv)
roc_obj_adv$auc
### RESULTS: 90.40%
# --- Coefficient of determination
coefDeter_glm(logitMod_Basic)
# --- Coefficient of determination
# - Basic model
(coefDeter_Basic <- coefDeter_glm(logitMod_Basic))
### RESULTS: 2.09%
# - Intermediate model
(coefDeter_Int <- coefDeter_glm(logitMod_Int))
### RESULTS: 21.96%
# - Advanced model
(coefDeter_Adv <- coefDeter_glm(logitMod_Adv))
# --- Plotting model diagnostics
datPlot_diag <- rbind(data.table(Coef_Deter = coefDeter_Basic,
Model="a_Basic"),
data.table(Coef_Deter = coefDeter_Basic,
Model="a_Intermediate"),
data.table(Coef_Deter = coefDeter_Basic,
Model="a_Advanced"))
datPlot_diag
# --- Plotting model diagnostics
datPlot_diag <- rbind(data.table(Coef_Deter = coefDeter_Basic,
Model="a_Basic"),
data.table(Coef_Deter = coefDeter_Intermediate,
Model="a_Intermediate"),
data.table(Coef_Deter = coefDeter_Advanced,
Model="a_Advanced"))
# --- Plotting model diagnostics
datPlot_diag <- rbind(data.table(Coef_Deter = coefDeter_Basic,
Model="a_Basic"),
data.table(Coef_Deter = coefDeter_Int,
Model="a_Intermediate"),
data.table(Coef_Deter = coefDeter_Adv,
Model="a_Advanced"))
datPlot_diag
# --- Plotting the ROC curves
datPlot_ROC <- rbind(data.table(TPR=roc_obj_basic$sensitivities,
FPR=1-roc_obj_basic$specificities,
Model="a_Basic"),
data.table(TPR=roc_obj_int$sensitivities,
FPR=1-roc_obj_int$specificities,
Model="b_Intermediate"),
data.table(TPR=roc_obj_adv$sensitivities,
FPR=1-roc_obj_adv$specificities,
Model="c_Advanced"))
datPlot_ROC
datPlot_diag
# --- Plotting model diagnostics
# - Creating the plotting dataset
datPlot_diag <- rbind(data.table(Statistic="Coef_Deter",
Value = coefDeter_Basic,
Model="a_Basic"),
data.table(Statistic="Coef_Deter",
Value = coefDeter_Int,
Model="a_Intermediate"),
data.table(Statistic="Coef_Deter",
Value = coefDeter_Adv,
Model="a_Advanced"))
datPlot_diag
datPlot_diag[,Label:=paste0(sprintf("%.2f", value),"%")]
# --- Plotting model diagnostics
# - Creating the plotting dataset
datPlot_diag <- rbind(data.table(Statistic="Coef_Deter",
Value = coefDeter_Basic,
Model="a_Basic"),
data.table(Statistic="Coef_Deter",
Value = coefDeter_Int,
Model="a_Intermediate"),
data.table(Statistic="Coef_Deter",
Value = coefDeter_Adv,
Model="a_Advanced"))
datPlot_diag[,Label:=paste0(sprintf("%.2f", Value),"%")]
datPlot_diag
datPlot_diag[,Label:=paste0(sprintf("%.2f", Value)*100,"%")]
# --- Plotting model diagnostics
# - Creating the plotting dataset
datPlot_diag <- rbind(data.table(Statistic="Coef_Deter",
Value = coefDeter_Basic,
Model="a_Basic"),
data.table(Statistic="Coef_Deter",
Value = coefDeter_Int,
Model="a_Intermediate"),
data.table(Statistic="Coef_Deter",
Value = coefDeter_Adv,
Model="a_Advanced"))
datPlot_diag[,Label:=paste0(sprintf("%.2f", Value)*100,"%")]
datPlot_diag[,Label:=paste0(sprintf("%.2f", Value*100),"%")]
datPlot_diag
# - Plotting parameters
chosenFont <- "Cambria"; dpi<-180
col.v <- brewer.pal(10, "Paired")[c(8,6,4)]
fill.v <- brewer.pal(10, "Paired")[c(7,5,3)]
linetype.v <- c(3,4)
label.v <- list("a_Baisc"="Basic",
"b_Intermediate"="Intermediate",
"c_Advanced"="Advanced")
ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal()
ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Base Variable", y="AUC(%)") +
geom_col(aes(colour=Model, fill=Model), position="dodge")
# - Plotting parameters
chosenFont <- "Cambria"; dpi<-180
col.v <- brewer.pal(10, "Paired")[c(8,6,4)]
fill.v <- brewer.pal(10, "Paired")[c(7,5,3)]
linetype.v <- c(3,4)
label.v <- list("a_Baisc"="Basic",
"b_Intermediate"="Intermediate",
"c_Advanced"="Advanced")
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Base Variable", y="AUC(%)") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
# - Plotting parameters
chosenFont <- "Cambria"; dpi<-180
col.v <- brewer.pal(9, "Blues")[c(4,7,9)]
col.v2 <- rep(c(col.v[2], col.v[3], col.v[1]),6)
col.v3 <- rep("white", 18)
linetype.v <- c(3,4)
label.v <- list("a_Baisc"="Basic",
"b_Intermediate"="Intermediate",
"c_Advanced"="Advanced")
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Base Variable", y="AUC(%)") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Base Variable", y="AUC(%)") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9))
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Model, y=Value, group=Statistic)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Base Variable", y="AUC(%)") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
datPlot_diag
col.v2
# - Plotting parameters
chosenFont <- "Cambria"; dpi<-180
col.v <- brewer.pal(9, "Blues")[c(4,7,9)]
col.v2 <- rep(c(col.v[2], col.v[3], col.v[1]),1)
col.v3 <- rep("white", 3)
linetype.v <- c(3,4)
label.v <- list("a_Baisc"="Basic",
"b_Intermediate"="Intermediate",
"c_Advanced"="Advanced")
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Base Variable", y="AUC(%)") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
label.v <- list("a_Basic"="Basic",
"b_Intermediate"="Intermediate",
"c_Advanced"="Advanced")
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Base Variable", y="AUC(%)") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
# --- Plotting model diagnostics
# - Creating the plotting dataset
datPlot_diag <- rbind(data.table(Statistic="Coef_Deter",
Value = coefDeter_Basic,
Model="a_Basic"),
data.table(Statistic="Coef_Deter",
Value = coefDeter_Int,
Model="b_Intermediate"),
data.table(Statistic="Coef_Deter",
Value = coefDeter_Adv,
Model="c_Advanced"))
datPlot_diag[,Label:=paste0(sprintf("%.2f", Value*100),"%")]
# - Plotting parameters
chosenFont <- "Cambria"; dpi<-180
col.v <- brewer.pal(9, "Blues")[c(4,7,9)]
col.v2 <- rep(c(col.v[2], col.v[3], col.v[1]),1)
col.v3 <- rep("white", 3)
linetype.v <- c(3,4)
label.v <- list("a_Basic"="Basic",
"b_Intermediate"="Intermediate",
"c_Advanced"="Advanced")
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Base Variable", y="AUC(%)") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
col.v2 <- rep(c(col.v[1], col.v[2], col.v[3]),1)
col.v3 <- rep("white", 3)
linetype.v <- c(3,4)
label.v <- list("a_Basic"="Basic",
"b_Intermediate"="Intermediate",
"c_Advanced"="Advanced")
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Base Variable", y="AUC(%)") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Statistic", y="Value") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
# --- Plot
(g_mac_theme_sum <- ggplot(datPlot, aes(x=Base_Variable, y=AUC, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Base Variable", y="AUC(%)") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_x_continuout(lables=c("Coeffcient of Determination")) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Statistic", y="Value") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_x_continuout(lables=c("Coeffcient of Determination")) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Statistic", y="Value") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_x_continuous(lables=c("Coeffcient of Determination")) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Statistic", y="Value") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_x_discrete(lables=c("Coeffcient of Determination")) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Statistic", y="Value") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_x_discrete(labels=c("Coeffcient of Determination")) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
# --- Plotting model diagnostics
# - Creating the plotting dataset
datPlot_diag <- rbind(data.table(Statistic=c("Coef_Deter", "AUC"),
Value = c(coefDeter_Basic, roc_obj_basic$auc),
Model=rep("a_Basic"),2),
data.table(Statistic=c("Coef_Deter","AUC"),
Value = c(coefDeter_Int, roc_obj_int$auc),
Model=rep("b_Intermediate",2)),
data.table(Statistic=("Coef_Deter",AUC),
# --- Plotting model diagnostics
# - Creating the plotting dataset
datPlot_diag <- rbind(data.table(Statistic=c("Coef_Deter", "AUC"),
Value = c(coefDeter_Basic, roc_obj_basic$auc),
Model=rep("a_Basic",2)),
data.table(Statistic=c("Coef_Deter","AUC"),
Value = c(coefDeter_Int, roc_obj_int$auc),
Model=rep("b_Intermediate",2)),
data.table(Statistic=c("Coef_Deter",AUC),
Value = c(coefDeter_Adv,roc_obj_int$auc),
Model=rep("c_Advanced",2)))
# --- Plotting model diagnostics
# - Creating the plotting dataset
datPlot_diag <- rbind(data.table(Statistic=c("Coef_Deter", "AUC"),
Value = c(coefDeter_Basic, roc_obj_basic$auc),
Model=rep("a_Basic",2)),
data.table(Statistic=c("Coef_Deter","AUC"),
Value = c(coefDeter_Int, roc_obj_int$auc),
Model=rep("b_Intermediate",2)),
data.table(Statistic=c("Coef_Deter","AUC"),
Value = c(coefDeter_Adv,roc_obj_int$auc),
Model=rep("c_Advanced",2)))
datPlot_diag[,Label:=paste0(sprintf("%.2f", Value*100),"%")]
# - Plotting parameters
chosenFont <- "Cambria"; dpi<-180
col.v <- brewer.pal(9, "Blues")[c(4,7,9)]
col.v2 <- rep(c(col.v[1], col.v[2], col.v[3]),1)
col.v3 <- rep("white", 3)
linetype.v <- c(3,4)
label.v <- list("a_Basic"="Basic",
"b_Intermediate"="Intermediate",
"c_Advanced"="Advanced")
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Statistic", y="Value") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_x_discrete(labels=c("Coeffcient of Determination")) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
# - Plotting parameters
chosenFont <- "Cambria"; dpi<-180
col.v <- brewer.pal(9, "Blues")[c(4,7,9)]
col.v2 <- rep(c(col.v[1], col.v[2], col.v[3]),2)
col.v3 <- rep("white", 3*2)
linetype.v <- c(3,4)
label.v <- list("a_Basic"="Basic",
"b_Intermediate"="Intermediate",
"c_Advanced"="Advanced")
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Statistic", y="Value") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_x_discrete(labels=c("Coeffcient of Determination")) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Statistic", y="Value") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_x_discrete(labels=c("AUC","Coeffcient of Determination")) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
# --- Plotting model diagnostics
# - Creating the plotting dataset
datPlot_diag <- rbind(data.table(Statistic=c("Coef_Deter", "AUC"),
Value = c(coefDeter_Basic, roc_obj_basic$auc),
Model=rep("a_Basic",2)),
data.table(Statistic=c("Coef_Deter","AUC"),
Value = c(coefDeter_Int, roc_obj_int$auc),
Model=rep("b_Intermediate",2)),
data.table(Statistic=c("Coef_Deter","AUC"),
Value = c(coefDeter_Adv,roc_obj_adv$auc),
Model=rep("c_Advanced",2)))
datPlot_diag[,Label:=paste0(sprintf("%.2f", Value*100),"%")]
# - Plotting parameters
chosenFont <- "Cambria"; dpi<-180
col.v <- brewer.pal(9, "Blues")[c(4,7,9)]
col.v2 <- rep(c(col.v[1], col.v[2], col.v[3]),2)
col.v3 <- rep("white", 3*2)
linetype.v <- c(3,4)
label.v <- list("a_Basic"="Basic",
"b_Intermediate"="Intermediate",
"c_Advanced"="Advanced")
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Statistic", y="Value") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_x_discrete(labels=c("AUC","Coeffcient of Determination")) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Statistic", y="Value") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_x_discrete(labels=c("AUC"="AUC","Coef_Deter"="Coeffcient of Determination")) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
col.v2 <- rep(c(col.v[2], col.v[1], col.v[3]),2)
col.v3 <- rep("white", 3*2)
linetype.v <- c(3,4)
label.v <- list("a_Basic"="Basic",
"b_Intermediate"="Intermediate",
"c_Advanced"="Advanced")
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Statistic", y="Value") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_x_discrete(labels=c("AUC"="AUC","Coef_Deter"="Coeffcient of Determination")) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
col.v <- c("a_Basic"=brewer.pal(9, "Blues")[4], "a_Intermediate"=brewer.pal(9, "Blues")[7], "a_Advanced"=brewer.pal(9, "Blues")[9])
col.v
# - Plotting parameters
chosenFont <- "Cambria"; dpi<-180
col.v <- c("a_Basic"=brewer.pal(9, "Blues")[4], "a_Intermediate"=brewer.pal(9, "Blues")[7], "a_Advanced"=brewer.pal(9, "Blues")[9])
col.v2 <- rep(c("a_Basic"=col.v[1], "b_Intermediate"=col.v[2], "c_Advanced"=col.v[3]),2)
col.v3 <- rep("white", 3*2)
linetype.v <- c(3,4)
label.v <- list("a_Basic"="Basic",
"b_Intermediate"="Intermediate",
"c_Advanced"="Advanced")
# - Creating the clustered column chart
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Statistic", y="Value") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_x_discrete(labels=c("AUC"="AUC","Coef_Deter"="Coeffcient of Determination")) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
col.v <- c("a_Basic"=brewer.pal(9, "Blues")[4], "b_Intermediate"=brewer.pal(9, "Blues")[7], "c_Advanced"=brewer.pal(9, "Blues")[9])
col.v2 <- rep(c("a_Basic"=col.v[1], "b_Intermediate"=col.v[2], "c_Advanced"=col.v[3]),2)
col.v3 <- rep("white", 3*2)
linetype.v <- c(3,4)
label.v <- list("a_Basic"="Basic",
"b_Intermediate"="Intermediate",
"c_Advanced"="Advanced")
# - Creating the clustered column chart
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Statistic", y="Value") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_x_discrete(labels=c("AUC"="AUC","Coef_Deter"="Coeffcient of Determination")) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
datPlot_diag
col.v
col.v2
c("a_Basic"=col.v[1], "b_Intermediate"=col.v[2], "c_Advanced"=col.v[3])
col.v[1]
# --- Plotting model diagnostics
# - Creating the plotting dataset
datPlot_diag <- rbind(data.table(Statistic=c("Coef_Deter", "AUC"),
Value = c(coefDeter_Basic, roc_obj_basic$auc),
Model=rep("a_Basic",2)),
data.table(Statistic=c("Coef_Deter","AUC"),
Value = c(coefDeter_Int, roc_obj_int$auc),
Model=rep("b_Intermediate",2)),
data.table(Statistic=c("Coef_Deter","AUC"),
Value = c(coefDeter_Adv,roc_obj_adv$auc),
Model=rep("c_Advanced",2)))
datPlot_diag[,Label:=paste0(sprintf("%.2f", Value*100),"%")]
# - Plotting parameters
chosenFont <- "Cambria"; dpi<-180
col.v <- c("a_Basic"=brewer.pal(9, "Blues")[4], "b_Intermediate"=brewer.pal(9, "Blues")[7], "c_Advanced"=brewer.pal(9, "Blues")[9])
col.v2 <- rep(c(col.v[1], col.v[2], col.v[3]),2)
col.v3 <- rep("white", 3*2)
linetype.v <- c(3,4)
label.v <- list("a_Basic"="Basic",
"b_Intermediate"="Intermediate",
"c_Advanced"="Advanced")
# - Creating the clustered column chart
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Statistic", y="Value") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_x_discrete(labels=c("AUC"="AUC","Coef_Deter"="Coeffcient of Determination")) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
col.v
col.v2
datPlot_diag
col.v2 <- c(rep(col.v[1],2) rep(col.v[2],2) rep(col.v[3],2))
col.v3 <- rep("white", 3*2)
linetype.v <- c(3,4)
label.v <- list("a_Basic"="Basic",
"b_Intermediate"="Intermediate",
"c_Advanced"="Advanced")
col.v2 <- c(rep(col.v[1],2), rep(col.v[2],2) rep(col.v[3],2))
col.v <- c("a_Basic"=brewer.pal(9, "Blues")[4], "b_Intermediate"=brewer.pal(9, "Blues")[7], "c_Advanced"=brewer.pal(9, "Blues")[9])
col.v2 <- c(rep(col.v[1],2), rep(col.v[2],2) rep(col.v[3],2))
col.v3 <- rep("white", 3*2)
linetype.v <- c(3,4)
col.v2 <- c(rep(col.v[1],2), rep(col.v[2],2), rep(col.v[3],2))
col.v3 <- rep("white", 3*2)
linetype.v <- c(3,4)
label.v <- list("a_Basic"="Basic",
"b_Intermediate"="Intermediate",
"c_Advanced"="Advanced")
# - Creating the clustered column chart
(g_model_diag_compar <- ggplot(datPlot_diag, aes(x=Statistic, y=Value, group=Model)) +
theme_minimal() + theme(legend.position = "bottom") + labs(x="Statistic", y="Value") +
geom_col(aes(colour=Model, fill=Model), position="dodge") +
geom_label(aes(label=Label), fill = col.v2, colour = col.v3, position=position_dodge(0.9)) +
scale_colour_manual(name="Model:", values=col.v, labels=label.v) +
scale_fill_manual(name="Model:", values=col.v, labels=label.v) +
scale_x_discrete(labels=c("AUC"="AUC","Coef_Deter"="Coeffcient of Determination")) +
scale_y_continuous(breaks=pretty_breaks(), label=percent))
rm(list=ls())
