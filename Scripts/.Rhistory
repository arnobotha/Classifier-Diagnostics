### CONCLUSION: Exclude above variables and reperform correlation analysis
(corCredit_Spear <- cor(datStandard_CreditRiskMap2[,c(4:14,17)], method="spearman", use = "complete.obs"))
# - Export correlation matrices to a CSV file to facilitate easier reporting
# Pearson correlation matrix
write.csv(corCredit_Pear, paste0(path_data_out,"corCredit_Pear.csv"), row.names = FALSE)
# Spearman correlation matrix
write.csv(corCredit_Spear, paste0(path_data_out,"corCredit_Spear.csv"), row.names = FALSE)
?subset
datStandard_CreditRiskMap2
sd(datStandard_CreditRiskMap2$Gov_and_Quality_of_Man)
corCredit_Pear
corImp_Spear
datStandard_CreditMap2
View(datStandard_ImpactMap)
# - Spearman significance tests - Between each input and the impact mapping output
# LiED % of HCT vs Final Model Map
cor.test(datStandard_ImpactMap$LiED_Perc_HCT, datStandard_ImpactMap$Fin_ModelMap, method="spearman")
### RESULTS:  LiED-ImpactMap: P-value = 0.006311 => Reject H0, correlation is significant
# Nominal % of HCT vs Final Model Map
cor.test(datStandard_ImpactMap$Nominal, datStandard_ImpactMap$Fin_ModelMap, method="spearman")
### RESULTS:  LiED-ImpactMap: P-value = 0.01808 => Reject H0, correlation is significant
# Facility Type % of HCT vs Final Model Map
cor.test(datStandard_ImpactMap$Facility_Type, datStandard_ImpactMap$Rec_ImpactMap_Num, method="spearman")
### RESULTS:  Nominal-ImpactMap: P-value = 0.01808 => Reject H0, correlation is significant
# Facility Type % of HCT vs Final Model Map
cor.test(datStandard_ImpactMap$Facility_Type, datStandard_ImpactMap$Fin_ModelMap, method="spearman")
# - Spearman significance tests - Between each input and the final impact mapping output
# LiED % of HCT vs Final Model Map
cor.test(datStandard_ImpactMap$LiED_Perc_HCT, datStandard_ImpactMap$Fin_ModelMap, method="spearman")
### RESULTS:  LiED_Perc_HCT-ImpactMap: P-value = 0.006311 => Reject H0, correlation is significant
# Nominal % of HCT vs Final Model Map
cor.test(datStandard_ImpactMap$Nominal, datStandard_ImpactMap$Fin_ModelMap, method="spearman")
### RESULTS:  Nominal-ImpactMap: P-value = 0.01808 => Reject H0, correlation is significant
# Facility Type % of HCT vs Final Model Map
cor.test(datStandard_ImpactMap$Facility_Type, datStandard_ImpactMap$Fin_ModelMap, method="spearman")
# - Spearman significance tests - Between each input and the final impact mapping output
### NOTE: Due to the large number of ties, the p-values are an approximation
# LiED % of HCT vs Final Model Map
cor.test(datStandard_ImpactMap$LiED_Perc_HCT, datStandard_ImpactMap$Fin_ModelMap, method="spearman")
### RESULTS:  LiED_Perc_HCT-ImpactMap: P-value = 0.006311 => Reject H0, correlation is significant
# Nominal % of HCT vs Final Model Map
cor.test(datStandard_ImpactMap$Nominal, datStandard_ImpactMap$Fin_ModelMap, method="spearman")
### RESULTS:  Nominal-ImpactMap: P-value = 0.01808 => Reject H0, correlation is significant
# Facility Type % of HCT vs Final Model Map
cor.test(datStandard_ImpactMap$Facility_Type, datStandard_ImpactMap$Fin_ModelMap, method="spearman")
# - Spearman significance tests - Between each input and the impact mapping output
# Counterparty rating vs Final model map
cor.test(datStandard_CreditRiskMap2$RatingScore, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman")
## RESULTS: RatingScore-Fin_ModelMap: P-value = 0.006311 => Reject H0, correlation is significant
# Industry volatility rating vs Final model map
cor.test(datStandard_CreditRiskMap2$Industry_Volatility, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman")
# - Spearman significance tests - Between each input and the impact mapping output
# Counterparty rating vs Final model map
cor.test(datStandard_CreditRiskMap2$RatingScore, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman")
## RESULTS: RatingScore-Fin_ModelMap: P-value = 0.02608 => Reject H0, correlation is significant
# Industry volatility rating vs Final model map
cor.test(datStandard_CreditRiskMap2$Industry_Volatility, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman")
datStandard_CreditRiskMap2$Current_Industry_Risk
## RESULTS: Industry_Volatility-Fin_ModelMap: P-value = 0.5273 => Do not H0, correlation is not significant
# Current industry risk vs Final model map
cor.test(datStandard_CreditRiskMap2$Current_Industry_Risk, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman")
## RESULTS: Industry_Volatility-Fin_ModelMap: P-value = 0.5273 => Do not H0, correlation is not significant
# Current industry risk vs Final model map
cor.test(datStandard_CreditRiskMap2$Current_Industry_Risk, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman")
datStandard_CreditRiskMap2$Gov_and_Quality_of_Man
## RESULTS: Industry_Volatility-Fin_ModelMap: P-value = 0.5273 => Do not H0, correlation is not significant
# Current industry risk vs Final model map
cor.test(datStandard_CreditRiskMap2$Current_Industry_Risk, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman")
# - Spearman significance tests - Between each input and the impact mapping output
# Counterparty rating vs Final model map
cor.test(datStandard_CreditRiskMap2$RatingScore, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman")
nrow(corCredit_spear)
# - Spearman correlation
(corCredit_Spear <- cor(datStandard_CreditRiskMap2[,c(4:14,17)], method="spearman", use = "complete.obs"))
nrow(corCredit_Spear)
# - Spearman significance tests - Between each input and the impact mapping output
### NOTE: Need A constrained correlation analysis, focused only on the correlation to the target [Fin_ModelMap], since missing values in the other field result in a severe reduction in usable data
# Counterparty rating vs Final model map
corCredit_Spear2 <- data.table(Variable=rep(NA,nrow(corCredit_Spear)-2), Correlation=rep(0,nrow(corCredit_Spear)-2))
corCredit_Spear2
names(corCredit_Spear2)
names(corCredit_Spear)
colnames(corCredit_Spear)
1:ncol(corCredit_Spear)-2
colnames(corCredit_Spear)[1:ncol(corCredit_Spear)-2]
# - Spearman significance tests - Between each input and the impact mapping output
### NOTE: Need A constrained correlation analysis, focused only on the correlation to the target [Fin_ModelMap], since missing values in the other field result in a severe reduction in usable data
corCredit_Spear2 <- data.table(Variable=colnames(corCredit_Spear)[1:(ncol(corCredit_Spear)-2)], Correlation=rep(0,nrow(corCredit_Spear)-2))
corCredit_Spear2
# - Spearman significance tests - Between each input and the impact mapping output
### NOTE: Need A constrained correlation analysis, focused only on the correlation to the target [Fin_ModelMap], since missing values in the other field result in a severe reduction in usable data
corCredit_Spear2 <- data.table(Variable=colnames(corCredit_Spear)[1:(ncol(corCredit_Spear)-1)], Correlation=rep(0,nrow(corCredit_Spear)-2))
# - Spearman significance tests - Between each input and the impact mapping output
### NOTE: Need A constrained correlation analysis, focused only on the correlation to the target [Fin_ModelMap], since missing values in the other field result in a severe reduction in usable data
corCredit_Spear2 <- data.table(Variable=colnames(corCredit_Spear)[1:(ncol(corCredit_Spear)-1)], Correlation=rep(0,nrow(corCredit_Spear)-1))
corCredit_Spear2
cor.test(datStandard_CreditRiskMap2$RatingScore, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman")
a<-cor.test(datStandard_CreditRiskMap2$RatingScore, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman")
a
class(a)
a$parameter
a$estimate
cor.test(datStandard_CreditRiskMap2$RatingScore, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman")$estimate
# Counterparty rating vs Final model map
corCredit_Spear2[1,2] <- cor.test(datStandard_CreditRiskMap2$RatingScore, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman")$estimate
corCredit_Spear2[1,2]
# Counterparty rating vs Final model map
(cor_test1 <- cor.test(datStandard_CreditRiskMap2$RatingScore, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[1,2] <- cor_test1$estimate
corCredit_Spear2
## RESULTS: RatingScore-Fin_ModelMap: P-value = 0.02608 => Reject H0, correlation is significant
# Industry volatility rating vs Final model map
corCredit_Spear_test2 <-cor.test(datStandard_CreditRiskMap2$Industry_Volatility, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman")
## RESULTS: RatingScore-Fin_ModelMap: P-value = 0.02608 => Reject H0, correlation is significant
# Industry volatility rating vs Final model map
(corCredit_Spear_test2 <-cor.test(datStandard_CreditRiskMap2$Industry_Volatility, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[2,2] <- corCredit_Spear_test2$estimate
corCredit_Spear2
## RESULTS: Industry_Volatility-Fin_ModelMap: P-value = 0.5273 => Reject H0, correlation is not significant
# Current industry risk vs Final model map
(corCredit_Spear_test3 <- cor.test(datStandard_CreditRiskMap2$Current_Industry_Risk, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
# - Spearman significance tests - Between each input and the impact mapping output
### NOTE: Need A constrained correlation analysis, focused only on the correlation to the target [Fin_ModelMap], since missing values in the other field result in a severe reduction in usable data
# Initialise correlation dataset
corCredit_Spear2 <- data.table(Variable=colnames(corCredit_Spear)[1:(ncol(corCredit_Spear)-1)],
Correlation=rep(0,nrow(corCredit_Spear)-1),
P_Value=rep(0,nrow(corCredit_Spear)-1))
corCredit_Spear_test1
# Counterparty rating vs Final model map
(corCredit_Spear_test1 <- cor.test(datStandard_CreditRiskMap2$RatingScore, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[1,2] <- corCredit_Spear_test1$estimate
corCredit_Spear_test1$p.value
corCredit_Spear2[1,3] <- corCredit_Spear_test1$p.value
# Industry volatility rating vs Final model map
(corCredit_Spear_test2 <- cor.test(datStandard_CreditRiskMap2$Industry_Volatility, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[2,2] <- corCredit_Spear_test2$estimate
corCredit_Spear2[1,3] <- corCredit_Spear_test2$p.value
corCredit_Spear2
corCredit_Spear2[1,2] <- corCredit_Spear_test1$estimate
corCredit_Spear2[1,3] <- corCredit_Spear_test1$p.value
corCredit_Spear2[2,2] <- corCredit_Spear_test2$estimate
corCredit_Spear2[2,3] <- corCredit_Spear_test2$p.value
corCredit_Spear2
# Current industry risk vs Final model map
(corCredit_Spear_test3 <- cor.test(datStandard_CreditRiskMap2$Current_Industry_Risk, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear3[3,2] <- corCredit_Spear_test3$estimate
corCredit_Spear_test3
corCredit_Spear3[3,2] <- corCredit_Spear_test3$estimate
corCredit_Spear2[3,2] <- corCredit_Spear_test3$estimate
corCredit_Spear2[3,3] <- corCredit_Spear_test3$p.value
corCredit_Spear2
corCredit_Spear_test3
corCredit_Spear3[2,5] <- corCredit_Spear_test3$p.value
# Governance & quality of management vs Final model map
(corCredit_Spear_test4 <- cor.test(datStandard_CreditRiskMap2$Current_Industry_Risk, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[2,4] <- corCredit_Spear_test4$estimate
corCredit_Spear2[2,5] <- corCredit_Spear_test4$p.value
corCredit_Spear_test4
# Governance & quality of management vs Final model map
(corCredit_Spear_test4 <- cor.test(datStandard_CreditRiskMap2$Gov_and_Quality_of_Man, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[2,4] <- corCredit_Spear_test4$estimate
corCredit_Spear_test4$estimate
corCredit_Spear2[2,4
]
corCredit_Spear2[4,2] <- corCredit_Spear_test4$estimate
corCredit_Spear2[4,3] <- corCredit_Spear_test4$p.value
# ORM status vs Final model map
(corCredit_Spear_test5 <- cor.test(datStandard_CreditRiskMap2$ORM_Status, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
# Covenant Monitoring vs Final model map
(corCredit_Spear_test6 <- cor.test(datStandard_CreditRiskMap2$Covenant_Monitoring, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
# Covenant Monitoring vs Final model map
(corCredit_Spear_test6 <- cor.test(datStandard_CreditRiskMap2$Covenant_Monitoring, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear_test5
corCredit_Spear_test6
# Financial Performance vs Final model map
(corCredit_Spear_test7 <- cor.test(datStandard_CreditRiskMap2$Financial_Performance, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[7,2] <- corCredit_Spear_test7$estimate
corCredit_Spear2[7,3] <- corCredit_Spear_test7$p.value
# Adverse News vs Final model map
(corCredit_Spear_test7 <- cor.test(datStandard_CreditRiskMap2$Adverse_News, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
# Adverse News vs Final model map
(corCredit_Spear_test8 <- cor.test(datStandard_CreditRiskMap2$Adverse_News, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[8,2] <- corCredit_Spear_test8$estimate
corCredit_Spear2[8,3] <- corCredit_Spear_test8$p.value
# Market Data vs Final model map
(corCredit_Spear_test9 <- cor.test(datStandard_CreditRiskMap2$Market_Data, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[9,2] <- corCredit_Spear_test9$estimate
corCredit_Spear2[9,3] <- corCredit_Spear_test9$p.value
# Sponsor/Shareholders vs Final model map
(corCredit_Spear_test10 <- cor.test(datStandard_CreditRiskMap2$Sponsor_or_Shareholders, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[10,2] <- corCredit_Spear_test10$estimate
corCredit_Spear2[10,3] <- corCredit_Spear_test10$p.value
corCredit_Spear2
datStandard_CreditRiskMap2$Sponsor_or_Shareholders
# - Spearman significance tests - Between each input and the impact mapping output
### NOTE: Need A constrained correlation analysis, focused only on the correlation to the target [Fin_ModelMap], since missing values in the other field result in a severe reduction in usable data
# Initialise correlation dataset
corCredit_Spear2 <- data.table(Variable=colnames(corCredit_Spear)[1:(ncol(corCredit_Spear)-2)],
Correlation=rep(0,nrow(corCredit_Spear)-2),
P_Value=rep(0,nrow(corCredit_Spear)-2))
# 3.1.1 Counterparty rating vs Final model map
(corCredit_Spear_test1 <- cor.test(datStandard_CreditRiskMap2$RatingScore, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[1,2] <- corCredit_Spear_test1$estimate
corCredit_Spear2[1,3] <- corCredit_Spear_test1$p.value
# 3.3.2 Industry volatility rating vs Final model map
(corCredit_Spear_test2 <- cor.test(datStandard_CreditRiskMap2$Industry_Volatility, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[2,2] <- corCredit_Spear_test2$estimate
corCredit_Spear2[2,3] <- corCredit_Spear_test2$p.value
# 3.3.3 Current industry risk vs Final model map
(corCredit_Spear_test3 <- cor.test(datStandard_CreditRiskMap2$Current_Industry_Risk, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[3,2] <- corCredit_Spear_test3$estimate
corCredit_Spear2[3,3] <- corCredit_Spear_test3$p.value
# 3.3.4 Governance & quality of management vs Final model map
(corCredit_Spear_test4 <- cor.test(datStandard_CreditRiskMap2$Gov_and_Quality_of_Man, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[4,2] <- corCredit_Spear_test4$estimate
corCredit_Spear2[4,3] <- corCredit_Spear_test4$p.value
# 3.3.5 ORM status vs Final model map
(corCredit_Spear_test5 <- cor.test(datStandard_CreditRiskMap2$ORM_Status, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[5,2] <- corCredit_Spear_test5$estimate
corCredit_Spear2[5,3] <- corCredit_Spear_test5$p.value
# 3.3.6 Covenant Monitoring vs Final model map
(corCredit_Spear_test6 <- cor.test(datStandard_CreditRiskMap2$Covenant_Monitoring, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[6,2] <- corCredit_Spear_test6$estimate
corCredit_Spear2[6,3] <- corCredit_Spear_test6$p.value
# 3.3.7 Financial Performance vs Final model map
(corCredit_Spear_test7 <- cor.test(datStandard_CreditRiskMap2$Financial_Performance, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[7,2] <- corCredit_Spear_test7$estimate
corCredit_Spear2[7,3] <- corCredit_Spear_test7$p.value
# 3.3.8 Adverse News vs Final model map
(corCredit_Spear_test8 <- cor.test(datStandard_CreditRiskMap2$Adverse_News, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[8,2] <- corCredit_Spear_test8$estimate
corCredit_Spear2[8,3] <- corCredit_Spear_test8$p.value
# 3.3.9 Market Data vs Final model map
(corCredit_Spear_test9 <- cor.test(datStandard_CreditRiskMap2$Market_Data, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[9,2] <- corCredit_Spear_test9$estimate
corCredit_Spear2[9,3] <- corCredit_Spear_test9$p.value
# 3.3.10 Sponsor/Shareholders vs Final model map
(corCredit_Spear_test10 <- cor.test(datStandard_CreditRiskMap2$Sponsor_or_Shareholders, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[10,2] <- corCredit_Spear_test10$estimate
corCredit_Spear2[10,3] <- corCredit_Spear_test10$p.value
corCredit_Spear2
# Add an indicator whether the correlation is significant
corCredit_Spear2[,Cor_Sig:=P_Value>0.05]
corCredit_Spear2
# - Spearman Correlation Vector - Between each input and the final impact mapping output
### NOTE: Need A constrained correlation analysis, focused only on the correlation to the target [Fin_ModelMap], since missing values in the other field result in a severe reduction in usable data
# Initialise correlation dataset
corImp_Spear2 <- data.table(Variable=colnames(corImp_Spear)[1:(ncol(corImp_Spear)-2)],
Correlation=rep(0,nrow(corImp_Spear)-2),
P_Value=rep(0,nrow(corImp_Spear)-2))
corImp_Spear2
corImp_Spear_test1
# 3.2.1 LiED rating vs Final model map
(corImp_Spear_test1 <- cor.test(datStandard_ImpactMap$LiED_Perc_HCT, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corImp_Spear_test1
corCredit_Spear_test1$estimate
corImp_Spear2[1,2]
corImp_Spear2[1,2] <- corCredit_Spear_test1$estimate
corImp_Spear2[1,3] <- corCredit_Spear_test1$p.value
### RESULTS: LiED_Perc_HCT-Fin_ModelMap: P-value = 0.006311 => Reject H0, correlation is significant
# 3.2.2 Nominal rating vs Final model map
(corImp_Spear_test2 <- cor.test(datStandard_ImpactMap$Nominal, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
### RESULTS: LiED_Perc_HCT-Fin_ModelMap: P-value = 0.006311 => Reject H0, correlation is significant
# 3.2.2 Nominal rating vs Final model map
(corImp_Spear_test2 <- cor.test(datStandard_ImpactMap$Nominal, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corImp_Spear2[2,2] <- corCredit_Spear_test2$estimate
corImp_Spear2[2,3] <- corCredit_Spear_test2$p.value
### RESULTS: Nominal-Fin_ModelMap: P-value = 0.7847 => Reject H0, correlation is significant
# 3.2.3 Facility type vs Final model map
(corImp_Spear_test3 <- cor.test(datStandard_ImpactMap$Facility_Type, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
### RESULTS: Nominal-Fin_ModelMap: P-value = 0.7847 => Reject H0, correlation is significant
# 3.2.3 Facility type vs Final model map
(corImp_Spear_test3 <- cor.test(datStandard_ImpactMap$Facility_Type, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
datStandard_ImpactMap$Facility_Type
# 3.2.1 LiED vs Final model map
(corImp_Spear_test1 <- cor.test(datStandard_ImpactMap$LiED_Perc_HCT, datStandard_ImpactMap$Fin_ModelMap, method="spearman"))
corImp_Spear2[1,2] <- corCredit_Spear_test1$estimate
corImp_Spear2[1,3] <- corCredit_Spear_test1$p.value
### RESULTS: LiED_Perc_HCT-Fin_ModelMap: P-value = 0.006311 => Reject H0, correlation is significant
# 3.2.2 Nominal vs Final model map
(corImp_Spear_test2 <- cor.test(datStandard_ImpactMap$Nominal, datStandard_ImpactMap$Fin_ModelMap, method="spearman"))
corImp_Spear2[2,2] <- corCredit_Spear_test2$estimate
corImp_Spear2[2,3] <- corCredit_Spear_test2$p.value
### RESULTS: Nominal-Fin_ModelMap: P-value = 0.01808 => Reject H0, correlation is significant
# 3.2.3 Facility type vs Final model map
(corImp_Spear_test3 <- cor.test(datStandard_ImpactMap$Facility_Type, datStandard_ImpactMap$Fin_ModelMap, method="spearman"))
corImp_Spear2[3,2] <- corCredit_Spear_test3$estimate
corImp_Spear2[3,3] <- corCredit_Spear_test3$p.value
corImp_Spear2
# ------ 3 Correlation analysis
# --- 3.1 Conditionally load data if not in memory
# - Standardised Credit Risk Mapping Table
if (!exists('datStandard_ImpactMap')) unpack.ffdf(paste0(path_data_out,"datStandard_ImpactMap"))
# - Standardised Credit Risk Mapping Table
if (!exists('datStandard_CreditRiskMap2')) unpack.ffdf(pate0(path_data_out,"datStandard_CreditRiskMap2"))
# --- 3.2 Impact Mapping
# - Pearson correlation
(corImp_Pear <- cor(datStandard_ImpactMap[,c(2:5,7)], method="pearson", , use="complete.obs"))
# - Pearson significance tests - Between each input and the impact mapping output
cor.test(datStandard_ImpactMap$LiED_Perc_HCT, datStandard_ImpactMap$Rec_ImpactMap_Num, method="pearson")
cor.test(datStandard_ImpactMap$Nominal, datStandard_ImpactMap$Rec_ImpactMap_Num, method="pearson")
cor.test(datStandard_ImpactMap$Facility_Type, datStandard_ImpactMap$Rec_ImpactMap_Num, method="pearson")
### RESULTS:  LiED-ImpactMap: P-value = 0.00000187 => Reject H0, correlation is significant
###           Nominal-ImpactMap: P-value = 0.03096 => Reject H0, correlation is significant
###           Facility_Type-ImpactMap: P-value = 0.2439 => Do not reject H0, correlation is not significant
# - Spearman Correlation Matrix
(corImp_Spear <- cor(datStandard_ImpactMap[,c(2,3,4,5,7)], method="spearman", use="complete.obs"))
# - Spearman Correlation Vector - Between each input and the final impact mapping output
### NOTE: Need A constrained correlation analysis, focused only on the correlation to the target [Fin_ModelMap], since missing values in the other field result in a severe reduction in usable data
# Initialise correlation dataset
corImp_Spear2 <- data.table(Variable=colnames(corImp_Spear)[1:(ncol(corImp_Spear)-2)],
Correlation=rep(0,nrow(corImp_Spear)-2),
P_Value=rep(0,nrow(corImp_Spear)-2))
# 3.2.1 LiED vs Final model map
(corImp_Spear_test1 <- cor.test(datStandard_ImpactMap$LiED_Perc_HCT, datStandard_ImpactMap$Fin_ModelMap, method="spearman"))
corImp_Spear2[1,2] <- corCredit_Spear_test1$estimate
corImp_Spear2[1,3] <- corCredit_Spear_test1$p.value
### RESULTS: LiED_Perc_HCT-Fin_ModelMap: P-value = 0.006311 => Reject H0, correlation is significant
# 3.2.2 Nominal vs Final model map
(corImp_Spear_test2 <- cor.test(datStandard_ImpactMap$Nominal, datStandard_ImpactMap$Fin_ModelMap, method="spearman"))
corImp_Spear2[2,2] <- corCredit_Spear_test2$estimate
corImp_Spear2[2,3] <- corCredit_Spear_test2$p.value
### RESULTS: Nominal-Fin_ModelMap: P-value = 0.01808 => Reject H0, correlation is significant
# 3.2.3 Facility type vs Final model map
(corImp_Spear_test3 <- cor.test(datStandard_ImpactMap$Facility_Type, datStandard_ImpactMap$Fin_ModelMap, method="spearman"))
corImp_Spear2[3,2] <- corCredit_Spear_test3$estimate
corImp_Spear2[3,3] <- corCredit_Spear_test3$p.value
### RESULTS: Nominal-Fin_ModelMap: P-value = 0.01217 => Reject H0, correlation is significant
# - Export correlation matrices to a CSV file to facilitate easier reporting
# Pearson correlation matrix
write.csv(corImp_Pear, paste0(path_data_out,"corImp_Pear.csv"), row.names = FALSE)
# Spearman correlation matrix
write.csv(corImp_Spear, paste0(path_data_out,"corImp_Spear.csv"), row.names = FALSE)
# Spearman correlation vector
write.csv(corImp_Spear2, paste0(path_data_out,"corImp_Spear_Vector.csv"), row.names = FALSE)
# --- 3.3 Credit Risk Mapping
# - Pearson correlation matrix
(corCredit_Pear <- cor(datStandard_CreditRiskMap2[,c(4:14,17)], method="pearson", use = "complete.obs"))
### RESULTS: The following variables have no/undefined correlation: [Gov_and_Quality_of_Man] and [Sponsor_or_Shareholders]
###          This is since both variables have a standard deviation of zero; i.e., all values are the same
# - Spearman correlation matrix
(corCredit_Spear <- cor(datStandard_CreditRiskMap2[,c(4:14,17)], method="spearman", use = "complete.obs"))
### RESULTS: The following variables have no/undefined correlation: [Gov_and_Quality_of_Man]; and [Sponsor_or_Shareholders]
###          This is since both variables have a standard deviation of zero; i.e., all values are the same
# - Spearman Correlation vector - Between each input and the final impact mapping output
### NOTE: Need A constrained correlation analysis, focused only on the correlation to the target [Fin_ModelMap], since missing values in the other field result in a severe reduction in usable data
# Initialise correlation dataset
corCredit_Spear2 <- data.table(Variable=colnames(corCredit_Spear)[1:(ncol(corCredit_Spear)-2)],
Correlation=rep(0,nrow(corCredit_Spear)-2),
P_Value=rep(0,nrow(corCredit_Spear)-2))
# 3.3.1 Counterparty rating vs Final model map
(corCredit_Spear_test1 <- cor.test(datStandard_CreditRiskMap2$RatingScore, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[1,2] <- corCredit_Spear_test1$estimate
corCredit_Spear2[1,3] <- corCredit_Spear_test1$p.value
### RESULTS: RatingScore-Fin_ModelMap: P-value = 0.02608 => Reject H0, correlation is significant
# 3.3.2 Industry volatility rating vs Final model map
(corCredit_Spear_test2 <- cor.test(datStandard_CreditRiskMap2$Industry_Volatility, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[2,2] <- corCredit_Spear_test2$estimate
corCredit_Spear2[2,3] <- corCredit_Spear_test2$p.value
### RESULTS: Industry_Volatility-Fin_ModelMap: P-value = 0.5273 => Do not reject H0, correlation is not significant
# 3.3.3 Current industry risk vs Final model map
(corCredit_Spear_test3 <- cor.test(datStandard_CreditRiskMap2$Current_Industry_Risk, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[3,2] <- corCredit_Spear_test3$estimate
corCredit_Spear2[3,3] <- corCredit_Spear_test3$p.value
### RESULTS: Current_Industry_Risk-Fin_ModelMap: P-value = 0.1185 => Do not reject H0, correlation is not significant
# 3.3.4 Governance & quality of management vs Final model map
(corCredit_Spear_test4 <- cor.test(datStandard_CreditRiskMap2$Gov_and_Quality_of_Man, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[4,2] <- corCredit_Spear_test4$estimate
corCredit_Spear2[4,3] <- corCredit_Spear_test4$p.value
### RESULTS: Current_Industry_Risk-Fin_ModelMap: P-value = NA => Standard deviation equal to one, resulting in an undefined correlation
# 3.3.5 ORM status vs Final model map
(corCredit_Spear_test5 <- cor.test(datStandard_CreditRiskMap2$ORM_Status, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[5,2] <- corCredit_Spear_test5$estimate
corCredit_Spear2[5,3] <- corCredit_Spear_test5$p.value
### RESULTS: ORM_Status-Fin_ModelMap: P-value = 0.02608 => Reject H0, correlation is significant
# 3.3.6 Covenant Monitoring vs Final model map
(corCredit_Spear_test6 <- cor.test(datStandard_CreditRiskMap2$Covenant_Monitoring, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[6,2] <- corCredit_Spear_test6$estimate
corCredit_Spear2[6,3] <- corCredit_Spear_test6$p.value
### RESULTS: Covenant_Monitoring-Fin_ModelMap: P-value = 0.1059 => Do not reject H0, correlation is not significant
# 3.3.7 Financial Performance vs Final model map
(corCredit_Spear_test7 <- cor.test(datStandard_CreditRiskMap2$Financial_Performance, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[7,2] <- corCredit_Spear_test7$estimate
corCredit_Spear2[7,3] <- corCredit_Spear_test7$p.value
### RESULTS: Financial_Performance-Fin_ModelMap: P-value = 0.07928 => Do not reject H0, correlation is not significant
# 3.3.8 Adverse News vs Final model map
(corCredit_Spear_test8 <- cor.test(datStandard_CreditRiskMap2$Adverse_News, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[8,2] <- corCredit_Spear_test8$estimate
corCredit_Spear2[8,3] <- corCredit_Spear_test8$p.value
### RESULTS: Adverse_News-Fin_ModelMap: P-value = 0.3191 => Do not reject H0, correlation is not significant
# 3.3.9 Market Data vs Final model map
(corCredit_Spear_test9 <- cor.test(datStandard_CreditRiskMap2$Market_Data, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[9,2] <- corCredit_Spear_test9$estimate
corCredit_Spear2[9,3] <- corCredit_Spear_test9$p.value
### RESULTS: Market_Data-Fin_ModelMap: P-value = 0.04272 => Reject H0, correlation is significant
# 3.3.10 Sponsor/Shareholders vs Final model map
(corCredit_Spear_test10 <- cor.test(datStandard_CreditRiskMap2$Sponsor_or_Shareholders, datStandard_CreditRiskMap2$Fin_ModelMap, method="spearman"))
corCredit_Spear2[10,2] <- corCredit_Spear_test10$estimate
corCredit_Spear2[10,3] <- corCredit_Spear_test10$p.value
### RESULTS: Sponsor_or_Shareholders-Fin_ModelMap: P-value = NA => Standard deviation equal to one, resulting in an undefined correlation
# Add an indicator whether the correlation is significant
corCredit_Spear2[,Cor_Sig:=P_Value>0.05]
# - Export correlation matrices to a CSV file to facilitate easier reporting
# Pearson correlation matrix
write.csv(corCredit_Pear, paste0(path_data_out,"corCredit_Pear.csv"), row.names = FALSE)
# Spearman correlation matrix
write.csv(corCredit_Spear, paste0(path_data_out,"corCredit_Spear.csv"), row.names = FALSE)
# Spearman correlation vector
write.csv(corCredit_Spear2, paste0(path_data_out,"corCredit_Spear_Vector.csv"), row.names = FALSE)
datStandard_CreditRiskMap2
# 3.2.1 LiED vs Final model map
(corImp_Spear_test1 <- cor.test(datStandard_ImpactMap$LiED_Perc_HCT, datStandard_ImpactMap$Fin_ModelMap, method="spearman"))
### RESULTS: LiED_Perc_HCT-Fin_ModelMap: P-value = 0.006311 => Reject H0, correlation is significant
# 3.2.2 Nominal vs Final model map
(corImp_Spear_test2 <- cor.test(datStandard_ImpactMap$Nominal, datStandard_ImpactMap$Fin_ModelMap, method="spearman"))
corImp_Spear2[2,2] <- corCredit_Spear_test2$estimate
corImp_Spear2[2,3] <- corCredit_Spear_test2$p.value
# - Spearman Correlation Vector - Between each input and the final impact mapping output
### NOTE: Need A constrained correlation analysis, focused only on the correlation to the target [Fin_ModelMap], since missing values in the other field result in a severe reduction in usable data
# Initialise correlation dataset
corImp_Spear2 <- data.table(Variable=colnames(corImp_Spear)[1:(ncol(corImp_Spear)-2)],
Correlation=rep(0,nrow(corImp_Spear)-2),
P_Value=rep(0,nrow(corImp_Spear)-2))
# 3.2.1 LiED vs Final model map
(corImp_Spear_test1 <- cor.test(datStandard_ImpactMap$LiED_Perc_HCT, datStandard_ImpactMap$Fin_ModelMap, method="spearman"))
corImp_Spear2[1,2] <- corImp_Spear_test1$estimate
corImp_Spear2[1,3] <- corImp_Spear_test1$p.value
### RESULTS: LiED_Perc_HCT-Fin_ModelMap: P-value = 0.006311 => Reject H0, correlation is significant
# 3.2.2 Nominal vs Final model map
(corImp_Spear_test2 <- cor.test(datStandard_ImpactMap$Nominal, datStandard_ImpactMap$Fin_ModelMap, method="spearman"))
corImp_Spear2[2,2] <- corImp_Spear_test2$estimate
corImp_Spear2[2,3] <- corImp_Spear_test2$p.value
### RESULTS: Nominal-Fin_ModelMap: P-value = 0.01808 => Reject H0, correlation is significant
# 3.2.3 Facility type vs Final model map
(corImp_Spear_test3 <- cor.test(datStandard_ImpactMap$Facility_Type, datStandard_ImpactMap$Fin_ModelMap, method="spearman"))
corImp_Spear2[3,2] <- corImp_Spear_test3$estimate
corImp_Spear2[3,3] <- corImp_Spear_test3$p.value
# - Export correlation matrices to a CSV file to facilitate easier reporting
# Pearson correlation matrix
write.csv(corImp_Pear, paste0(path_data_out,"corImp_Pear.csv"), row.names = FALSE)
# Spearman correlation matrix
write.csv(corImp_Spear, paste0(path_data_out,"corImp_Spear.csv"), row.names = FALSE)
# Spearman correlation vector
write.csv(corImp_Spear2, paste0(path_data_out,"corImp_Spear_Vector.csv"), row.names = FALSE)
# Spearman correlation vector
write.csv(corImp_Spear2, paste0(path_data_out,"corImp_Spear_Vector.csv"), row.names = FALSE)
?cor.test
################ R Shiny ################
# Experimentation with R Shiny
#----------------------------------------
# ------ 1. Preliminaries
# - Loading the required packages
require(shiny)
# ------ 2. Interactive app
# - Specifying the pathways
# Shiny scripts
path_direct <- "C:/Users/r5532132/OneDrive - FRG/Transformations Mini-vation/R Project/Directory"
# _ Running the app
runApp(appDir = path_direct, display.mode = "normal")
################ R Shiny ################
# Experimentation with R Shiny
#----------------------------------------
# ------ 1. Preliminaries
# - Loading the required packages
require(shiny)
# ------ 2. Interactive app
# - Specifying the pathways
# Shiny scripts
path_direct <- "C:/Users/r5532132/OneDrive - FRG/GCRM/Transformations Mini-vation/R Project/Directory"
# _ Running the app
runApp(appDir = path_direct, display.mode = "normal")
path_direct
################ R Shiny ################
# Experimentation with R Shiny
#----------------------------------------
# ------ 1. Preliminaries
# - Loading the required packages
require(shiny)
# ------ 2. Interactive app
# - Specifying the pathways
# Shiny scripts
path_direct <- "C:/Users/r5532132/OneDrive - FRG/GCRM/Transformations Mini-vation/R Project/Directory"
# _ Running the app
runApp(appDir = path_direct, display.mode = "normal")
# survPath <- "C:/Data/Default Competing Risks/Data/" #Path for accessing and saving main datasets.
# if (!exists('CreditDat_Use')) {
#    unpack.ffdf(paste0(survPath,"CreditDat_Use1b"), survPath)
# }
# CreditDat_Use[, DefaultStatus1_lead_12_max := imputeLastKnown(frollapply(x=(as.numeric(DefaultStatus1)-1), n=12, align="left", FUN=max)), by=list(LoanID)]
# D<-CreditDat_Use[TimeInPerfSpell==1,][1:25000,]
# D[, slc_pmnt_method:=as.factor(slc_pmnt_method)]; D[, LN_TPE:=as.factor(LN_TPE)]
# write.csv(D, "C:\\Data\\Default Competing Risks\\Data\\test4.csv")
################ R Shiny ################
# Experimentation with R Shiny
#----------------------------------------
# ------ 1. Preliminaries
# - Loading the required packages
require(shiny)
# ------ 2. Interactive app
# - Specifying the pathways
# Shiny scripts
path_direct <- "C:/Users/r5532132/OneDrive - FRG/GCRM/Transformations Mini-vation/R Project/Directory"
# _ Running the app
runApp(appDir = path_direct, display.mode = "normal")
# survPath <- "C:/Data/Default Competing Risks/Data/" #Path for accessing and saving main datasets.
# if (!exists('CreditDat_Use')) {
#    unpack.ffdf(paste0(survPath,"CreditDat_Use1b"), survPath)
# }
# CreditDat_Use[, DefaultStatus1_lead_12_max := imputeLastKnown(frollapply(x=(as.numeric(DefaultStatus1)-1), n=12, align="left", FUN=max)), by=list(LoanID)]
# D<-CreditDat_Use[TimeInPerfSpell==1,][1:25000,]
# D[, slc_pmnt_method:=as.factor(slc_pmnt_method)]; D[, LN_TPE:=as.factor(LN_TPE)]
# write.csv(D, "C:\\Data\\Default Competing Risks\\Data\\test4.csv")
